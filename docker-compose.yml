version: '3.7'

services:
    dbpeguin:
        image: postgres
        container_name: postgres_iris
        restart: always
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=data_iris
            - PGDATA=/var/lib/postgresql/data/pgdata
        volumes:
            - /home/estudiante/apps/data:/var/lib/postgresql/data/pgdata
        ports:
          - "5432:5432"
        networks:
          - proxynet
          
    flask:
        build: ./flask
        container_name: apipenguin
        restart: always
        environment:
            - APP_NAME=ApiPenguin
            - DB_HOST=dbpeguin
            - DB_NAME=data_iris
            - DB_USER=postgres
            - DB_PASSWORD=postgres
            - DB_PORT=5432
        volumes:
            - /home/estudiante/apps/model:/var/www/model
        expose:
            - 8080
        networks:
            - proxynet

    nginx:
        build: ./nginx
        container_name: nginxmicroservice
        restart: always
        ports:
            - "9090:9090"
        networks:
            - proxynet
        expose:
            - "9090"

    inferencepenguin:
        build: ./inference
        container_name: inferencepenguin
        restart: always
        environment:
          - APP_NAME=InferencePenguin
        volumes:
          - /home/estudiante/apps/model:/var/www/model
        expose:
            - 8081

networks:
  proxynet:
    name: custom_network
